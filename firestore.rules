rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection - allow admins to read all users
    match /users/{userId} {
      // Users can read their own data
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Users can create their own user document (for onboarding flags)
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Users can update their own data (except role)
      allow update: if request.auth != null && request.auth.uid == userId 
        && !('role' in resource.data.diff(resource.data).affectedKeys());
      
      // Only admins can create, delete, or modify roles for other users
      allow create, delete: if isAdmin();
      
      // Admins can update any user data
      allow update: if isAdmin();
    }
    
    // Allow admins to list all users (for admin dashboard)
    match /users/{document=**} {
      allow list: if isAdmin();
    }
    
    // Blogs collection rules
    match /blogs/{blogId} {
      // Anyone can read published blogs
      allow read: if resource.data.published == true;
      
      // Only admins can create, update, or delete blogs
      allow create, update, delete: if isAdmin();
      
      // Admins can read all blogs (including drafts)
      allow read: if isAdmin();
    }
    
    // Allow public to list published blogs
    match /blogs/{document=**} {
      allow list: if true;
    }
    
    // Portfolio collection rules
    match /portfolio/{portfolioId} {
      // Anyone can read published portfolio items
      allow read: if resource.data.published == true;
      
      // Only admins can create, update, or delete portfolio items
      allow create, update, delete: if isAdmin();
      
      // Admins can read all portfolio items (including drafts)
      allow read: if isAdmin();
    }
    
    // Allow public to list published portfolio items
    match /portfolio/{document=**} {
      allow list: if true;
    }
    
    // Services collection rules
    match /services/{serviceId} {
      // Anyone can read services
      allow read: if true;
      
      // Only admins can create, update, or delete services
      allow create, update, delete: if isAdmin();
    }
    
    // Allow public to list services
    match /services/{document=**} {
      allow list: if true;
    }
    
    // User onboarding collection rules
    match /userOnboarding/{userId} {
      // Users can read and write their own onboarding data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read all onboarding data for analytics
      allow read: if isAdmin();
    }
    
    // User progress collection rules
    match /userProgress/{userId} {
      // Users can read and write their own progress data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read and update all progress data for analytics and management
      allow read, write: if isAdmin();
    }
    
    // Allow admins to list all user progress (for system analytics)
    match /userProgress/{document=**} {
      allow list: if isAdmin();
    }
    
    // Account deletion requests
    match /accountDeletionRequests/{userId} {
      // Users can create deletion requests for their own account
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read all deletion requests
      allow read, update, delete: if isAdmin();
    }
    
    // Testimonials collection rules
    match /testimonials/{testimonialId} {
      // Anyone can read published testimonials
      allow read: if resource.data.published == true;
      
      // Only admins can create, update, or delete testimonials
      allow create, update, delete: if isAdmin();
      
      // Admins can read all testimonials (including unpublished)
      allow read: if isAdmin();
    }
    
    // Allow public to list published testimonials
    match /testimonials/{document=**} {
      allow list: if true;
    }
    
    // Contact submissions collection rules
    match /contactSubmissions/{submissionId} {
      // Anyone can create contact submissions (contact form)
      allow create: if true;
      
      // Only admins can read, update, or delete contact submissions
      allow read, update, delete: if isAdmin();
    }
    
    // Allow admins to list all contact submissions
    match /contactSubmissions/{document=**} {
      allow list: if isAdmin();
    }
    
    // Newsletter subscriptions collection rules
    match /newsletterSubscriptions/{subscriptionId} {
      // Anyone can create newsletter subscriptions
      allow create: if true;
      
      // Only admins can read, update, or delete newsletter subscriptions
      allow read, update, delete: if isAdmin();
    }
    
    // Allow admins to list all newsletter subscriptions
    match /newsletterSubscriptions/{document=**} {
      allow list: if isAdmin();
    }
    
    // Service consumption tracking collection rules
    match /serviceConsumption/{consumptionId} {
      // Users can read their own service consumption records
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Only admins can create, update, or delete service consumption records
      allow create, update, delete: if isAdmin();
    }
    
    // Allow admins to list all service consumption records
    match /serviceConsumption/{document=**} {
      allow list: if isAdmin();
    }
    
    // Default deny all for other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 